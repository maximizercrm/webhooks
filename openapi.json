{
  "openapi": "3.0.4",
  "info": {
    "title": "Webhooks API",
    "version": "v1"
  },
"servers": [{"url": ""}],
  "paths": {
    "/subscriptions": {
      "post": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Create a subscription",
        "description": "Combination of TargetId + Entity + Op must be unique.\n\nFilter operators:\n\nOperators applied to field values\n\nSyntax: \"field-name\": { \"operator\": \"field-value\" }\n\n    $EQ => equal\n    $GT => greater than\n    $GE => greater than or equal\n    $LT => lower than\n    $LE => lower than or equal\n\nOperators applied to field names\n\nSyntax: \"operator\": \"field-name\"\n\n    $HASFIELD => field exists in either Original or New data sections",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Entity":"AbEntry, Opportunity, etc","Op":"Create, Update, Delete, etc","TargetId":"12345678-1234-1234-1234-123456789012","Recipients":["Recipient1@acme.com","Recipient2@acme.com"],"Filter":["{ \"Key\" : { \"$EQ\": \"key-value\" } }","{ \"Rows\" : { \"$GT\": 500 } }","{ \"$HASFIELD\": \"field-name\" }"]}
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Entity":"AbEntry, Opportunity, etc","Op":"Create, Update, Delete, etc","TargetId":"12345678-1234-1234-1234-123456789012","Recipients":["Recipient1@acme.com","Recipient2@acme.com"],"Filter":["{ \"Key\" : { \"$EQ\": \"key-value\" } }","{ \"Rows\" : { \"$GT\": 500 } }","{ \"$HASFIELD\": \"field-name\" }"]}
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Entity":"AbEntry, Opportunity, etc","Op":"Create, Update, Delete, etc","TargetId":"12345678-1234-1234-1234-123456789012","Recipients":["Recipient1@acme.com","Recipient2@acme.com"],"Filter":["{ \"Key\" : { \"$EQ\": \"key-value\" } }","{ \"Rows\" : { \"$GT\": 500 } }","{ \"$HASFIELD\": \"field-name\" }"]}
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Entity":"AbEntry, Opportunity, etc","Op":"Create, Update, Delete, etc","TargetId":"12345678-1234-1234-1234-123456789012","Recipients":["Recipient1@acme.com","Recipient2@acme.com"],"Filter":["{ \"Key\" : { \"$EQ\": \"key-value\" } }","{ \"Rows\" : { \"$GT\": 500 } }","{ \"$HASFIELD\": \"field-name\" }"]}
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponseDtoSingleEntryResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Get list of subscriptions",
        "operationId": "GetListOfSubscriptions",
        "parameters": [
          {
            "name": "TargetId",
            "in": "query",
            "description": "Optional filter by Target Id",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "Entity",
            "in": "query",
            "description": "Optional filter by Entity",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Op",
            "in": "query",
            "description": "Optional filter by Operation",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponseDtoMultipleEntriesResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/subscriptions/{SubscriptionId}": {
      "put": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Update an existing subscription",
        "description": "Combination of TargetId + Entity + Op must be unique.\n\nFilter operators:\n\nOperators applied to field values\n\nSyntax: \"field-name\": { \"operator\": \"field-value\" }\n\n    $EQ => equal\n    $GT => greater than\n    $GE => greater than or equal\n    $LT => lower than\n    $LE => lower than or equal\n\nOperators applied to field names\n\nSyntax: \"operator\": \"field-name\"\n\n    $HASFIELD => field exists in either Original or New data sections",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Entity":"AbEntry, Opportunity, etc","Op":"Create, Update, Delete, etc","TargetId":"12345678-1234-1234-1234-123456789012","Recipients":["Recipient1@acme.com","Recipient2@acme.com"],"Filter":["{ \"Key\" : { \"$EQ\": \"key-value\" } }","{ \"Rows\" : { \"$GT\": 500 } }","{ \"$HASFIELD\": \"field-name\" }"]}
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Entity":"AbEntry, Opportunity, etc","Op":"Create, Update, Delete, etc","TargetId":"12345678-1234-1234-1234-123456789012","Recipients":["Recipient1@acme.com","Recipient2@acme.com"],"Filter":["{ \"Key\" : { \"$EQ\": \"key-value\" } }","{ \"Rows\" : { \"$GT\": 500 } }","{ \"$HASFIELD\": \"field-name\" }"]}
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Entity":"AbEntry, Opportunity, etc","Op":"Create, Update, Delete, etc","TargetId":"12345678-1234-1234-1234-123456789012","Recipients":["Recipient1@acme.com","Recipient2@acme.com"],"Filter":["{ \"Key\" : { \"$EQ\": \"key-value\" } }","{ \"Rows\" : { \"$GT\": 500 } }","{ \"$HASFIELD\": \"field-name\" }"]}
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Entity":"AbEntry, Opportunity, etc","Op":"Create, Update, Delete, etc","TargetId":"12345678-1234-1234-1234-123456789012","Recipients":["Recipient1@acme.com","Recipient2@acme.com"],"Filter":["{ \"Key\" : { \"$EQ\": \"key-value\" } }","{ \"Rows\" : { \"$GT\": 500 } }","{ \"$HASFIELD\": \"field-name\" }"]}
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponseDtoSingleEntryResponseDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponseDtoSingleEntryResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponseDtoSingleEntryResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Subscriptions"
        ],
        "summary": "Delete a subscription",
        "parameters": [
          {
            "name": "SubscriptionId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/targets": {
      "post": {
        "tags": [
          "Targets"
        ],
        "summary": "Create a target",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TargetRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Name":"Target Name","Endpoint":{"Url":"https://my-target-url.acme.com/webhook","Headers":[{"Key":"Authorization","Value":"Bearer 1234567890"},{"Key":"AnotherRelevantHeader","Value":"Header Value"}]}}
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Name":"Target Name","Endpoint":{"Url":"https://my-target-url.acme.com/webhook","Headers":[{"Key":"Authorization","Value":"Bearer 1234567890"},{"Key":"AnotherRelevantHeader","Value":"Header Value"}]}}
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Name":"Target Name","Endpoint":{"Url":"https://my-target-url.acme.com/webhook","Headers":[{"Key":"Authorization","Value":"Bearer 1234567890"},{"Key":"AnotherRelevantHeader","Value":"Header Value"}]}}
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TargetRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Name":"Target Name","Endpoint":{"Url":"https://my-target-url.acme.com/webhook","Headers":[{"Key":"Authorization","Value":"Bearer 1234567890"},{"Key":"AnotherRelevantHeader","Value":"Header Value"}]}}
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetResponseDtoSingleEntryResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "get": {
        "tags": [
          "Targets"
        ],
        "summary": "Get list of targets",
        "operationId": "GetListOfTargets",
        "parameters": [
          {
            "name": "Name",
            "in": "query",
            "description": "Optional filter by Target name",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetResponseDtoMultipleEntriesResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/targets/{TargetId}": {
      "put": {
        "tags": [
          "Targets"
        ],
        "summary": "Update an existing target",
        "parameters": [
          {
            "name": "TargetId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TargetRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Name":"Target Name","Endpoint":{"Url":"https://my-target-url.acme.com/webhook","Headers":[{"Key":"Authorization","Value":"Bearer 1234567890"},{"Key":"AnotherRelevantHeader","Value":"Header Value"}]}}
                }
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Name":"Target Name","Endpoint":{"Url":"https://my-target-url.acme.com/webhook","Headers":[{"Key":"Authorization","Value":"Bearer 1234567890"},{"Key":"AnotherRelevantHeader","Value":"Header Value"}]}}
                }
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Name":"Target Name","Endpoint":{"Url":"https://my-target-url.acme.com/webhook","Headers":[{"Key":"Authorization","Value":"Bearer 1234567890"},{"Key":"AnotherRelevantHeader","Value":"Header Value"}]}}
                }
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TargetRequestDto"
              },
              "examples": {
                "Syntax Example": {
                  "value": {"Name":"Target Name","Endpoint":{"Url":"https://my-target-url.acme.com/webhook","Headers":[{"Key":"Authorization","Value":"Bearer 1234567890"},{"Key":"AnotherRelevantHeader","Value":"Header Value"}]}}
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetResponseDtoSingleEntryResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Targets"
        ],
        "summary": "Delete an existing target",
        "parameters": [
          {
            "name": "TargetId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/targets/{TargetId}/enable": {
      "patch": {
        "tags": [
          "Targets"
        ],
        "summary": "Enable a target",
        "parameters": [
          {
            "name": "TargetId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/targets/{TargetId}/disable": {
      "patch": {
        "tags": [
          "Targets"
        ],
        "summary": "Disable a target",
        "parameters": [
          {
            "name": "TargetId",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Header": {
        "type": "object",
        "properties": {
          "Key": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "Detail": {
            "type": "string",
            "nullable": true
          },
          "Instance": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SubscriptionRequestDto": {
        "type": "object",
        "properties": {
          "Entity": {
            "type": "string",
            "nullable": true
          },
          "Op": {
            "type": "string",
            "nullable": true
          },
          "TargetId": {
            "type": "string",
            "format": "uuid"
          },
          "Recipients": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "Filter": {
            "type": "array",
            "items": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionResponseDto": {
        "type": "object",
        "properties": {
          "SubscriptionId": {
            "type": "string",
            "format": "uuid"
          },
          "Entity": {
            "type": "string",
            "nullable": true
          },
          "Op": {
            "type": "string",
            "nullable": true
          },
          "TargetId": {
            "type": "string",
            "format": "uuid"
          },
          "Recipients": {
            "type": "array",
            "items": { },
            "nullable": true
          },
          "Filter": {
            "type": "array",
            "items": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionResponseDtoMultipleEntriesItemsResponseDto": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubscriptionResponseDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubscriptionResponseDtoMultipleEntriesResponseDto": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/SubscriptionResponseDtoMultipleEntriesItemsResponseDto"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionResponseDtoSingleEntryItemResponseDto": {
        "type": "object",
        "properties": {
          "Item": {
            "$ref": "#/components/schemas/SubscriptionResponseDto"
          }
        },
        "additionalProperties": false
      },
      "SubscriptionResponseDtoSingleEntryResponseDto": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/SubscriptionResponseDtoSingleEntryItemResponseDto"
          }
        },
        "additionalProperties": false
      },
      "TargetRequestDto": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Endpoint": {
            "$ref": "#/components/schemas/TargetWebHookEndpointDto"
          }
        },
        "additionalProperties": false
      },
      "TargetResponseDto": {
        "type": "object",
        "properties": {
          "TargetId": {
            "type": "string",
            "format": "uuid"
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Enabled": {
            "type": "boolean"
          },
          "Endpoint": {
            "$ref": "#/components/schemas/TargetWebHookEndpointDto"
          }
        },
        "additionalProperties": false
      },
      "TargetResponseDtoMultipleEntriesItemsResponseDto": {
        "type": "object",
        "properties": {
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetResponseDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TargetResponseDtoMultipleEntriesResponseDto": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/TargetResponseDtoMultipleEntriesItemsResponseDto"
          }
        },
        "additionalProperties": false
      },
      "TargetResponseDtoSingleEntryItemResponseDto": {
        "type": "object",
        "properties": {
          "Item": {
            "$ref": "#/components/schemas/TargetResponseDto"
          }
        },
        "additionalProperties": false
      },
      "TargetResponseDtoSingleEntryResponseDto": {
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/TargetResponseDtoSingleEntryItemResponseDto"
          }
        },
        "additionalProperties": false
      },
      "TargetWebHookEndpointDto": {
        "type": "object",
        "properties": {
          "Url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "Headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Header"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Authorization header",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}
